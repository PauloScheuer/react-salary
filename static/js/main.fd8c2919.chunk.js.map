{"version":3,"sources":["components/inputs/InputFullSalary.js","components/inputs/InputReadOnly.js","components/bar/ProgressBarSalary.js","salary.js","App.js","index.js"],"names":["InputFullSalary","this","props","onChange","salary","type","className","placeholder","Component","InputReadOnly","value","percent","show","undefined","isNaN","console","log","Math","round","readOnly","ProgressBarSalary","percentINSS","percentIRPF","percentNet","style","width","INSS_TABLE","id","minValue","maxValue","difference","discountPercentage","discountValue","toFixed","calculateSalaryFrom","fullSalary","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","App","handleInputFullSalary","event","target","setState","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd8c2919.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nexport default class InputFullSalary extends Component {\r\n  render() {\r\n    const { onChange, salary } = this.props;\r\n    return (\r\n      <input onChange={onChange} type=\"number\" className=\"full\" placeholder={salary} />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nexport default class InputReadOnly extends Component {\r\n  render() {\r\n    const { value, percent } = this.props;\r\n    let show = '';\r\n    if (percent === undefined || isNaN(percent)) {\r\n      console.log(typeof (percent));\r\n      show = '';\r\n    } else {\r\n      show = ` - ${Math.round(percent)}%`;\r\n    }\r\n    return (\r\n      <input readOnly placeholder={Math.round(value) + show} className=\"read\" />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './styles.css';\r\n\r\nexport default class ProgressBarSalary extends Component {\r\n  render() {\r\n    const { percentINSS, percentIRPF, percentNet } = this.props;\r\n    return (\r\n      <div className=\"bar\">\r\n        <div className=\"inss\" style={{ width: `${percentINSS}%` }}></div>\r\n        <div className=\"irpf\" style={{ width: `${percentIRPF}%` }}></div>\r\n        <div className=\"net\" style={{ width: `${percentNet}%` }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom };\r\n","import React, { Component } from 'react';\nimport InputFullSalary from './components/inputs/InputFullSalary';\nimport InputReadOnly from './components/inputs/InputReadOnly';\nimport ProgressBarSalary from './components/bar/ProgressBarSalary';\nimport { calculateSalaryFrom } from './salary';\nimport './app.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = { fullSalary: 1000 };\n  }\n\n  handleInputFullSalary = (event) => {\n    const value = event.target.value;\n    this.setState({\n      fullSalary: value\n    });\n  }\n\n  render() {\n    const { baseINSS, baseIRPF, discountINSS, netSalary, discountIRPF } = calculateSalaryFrom(this.state.fullSalary);\n    const percentINSS = (discountINSS * 100) / baseINSS;\n    const percentIRPF = (discountIRPF * 100) / baseINSS;\n    const percentNet = 100 - percentINSS - percentIRPF;\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Calculadora de salário</h1>\n        </header>\n        <section className=\"secInput\">\n          <label className=\"t-sal\">Seu salário</label>\n          <InputFullSalary onChange={this.handleInputFullSalary} salary={this.state.fullSalary} />\n        </section>\n        <section className=\"readonly\">\n          <section className=\"secInput\">\n            <label className=\"b-inss\">Base INSS</label>\n            <InputReadOnly value={baseINSS} />\n          </section>\n          <section className=\"secInput\">\n            <label className=\"d-inss\">Desconto INSS</label>\n            <InputReadOnly value={discountINSS} percent={percentINSS} />\n          </section>\n          <section className=\"secInput\">\n            <label className=\"b-irpf\">Base IRPF</label>\n            <InputReadOnly value={baseIRPF} />\n          </section>\n          <section className=\"secInput\">\n            <label className=\"d-irpf\">Desconto IRPF</label>\n            <InputReadOnly value={discountIRPF} percent={percentIRPF} />\n          </section>\n          <section className=\"secInput\">\n            <label className=\"t-net\">Salário líquido</label>\n            <InputReadOnly value={netSalary} percent={percentNet} />\n          </section>\n\n        </section>\n        <ProgressBarSalary percentINSS={percentINSS} percentIRPF={percentIRPF} percentNet={percentNet} />\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}